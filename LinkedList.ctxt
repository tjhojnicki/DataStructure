#BlueJ class context
comment0.params=
comment0.target=LinkedList()
comment1.params=element
comment1.target=void\ addFirst(java.lang.Object)
comment1.text=\r\n\ Adds\ an\ element\ in\ the\ front\ of\ the\ linked\ list\r\n\ @param\ element-\ the\ element\ to\ add\r\n
comment2.params=
comment2.target=java.lang.Object\ getFirst()
comment2.text=\r\n\ returns\ the\ first\ element\ of\ the\ LL\r\n\ @return\ the\ first\ element\ of\ the\ LL\r\n
comment3.params=n\ newElement
comment3.target=void\ set(int,\ java.lang.Object)
comment3.text=\r\n\ adds\ a\ new\ node\ and\ where\ the\ node\ at\ n\ links\ used\ to\ be\ and\ then\ push\ it\ to\ after\ the\ new\ node\r\n\ @param-\ n-\ amount\ of\ links\ to\ be\ traversed,\ newElement-\ that\ data\ for\ the\ new\ node\r\n
comment4.params=n
comment4.target=java.lang.Object\ get(int)
comment4.text=\r\n\ returns\ the\ data\ of\ the\ node\ for\ the\ amount\ of\ links\ traversed\r\n\ @param\ -\ the\ amount\ of\ links\ to\ be\ traversed\r\n\ @return-\ the\ data\ of\ the\ node\ of\ n\ amount\ of\ links\r\n
comment5.params=n
comment5.target=LinkedList.Node\ getNode(int)
comment5.text=\r\n\ gets\ the\ Node\ object\ of\ n\ amount\ of\ links\r\n\ @param-\ the\ amount\ of\ linkes\ to\ be\ traversed\r\n\ @return-\ the\ Node\ object\ at\ n\ traversed\ links\r\n
comment6.params=obj
comment6.target=boolean\ contains(java.lang.Object)
comment6.text=\r\n\ checks\ to\ see\ if\ the\ linked\ list\ has\ the\ obj\ \r\n\ @param\ object\ that\ you\ will\ see\ if\ it\ is\ in\ the\ list\r\n\ @return-\ boolean\ on\ if\ it\ is\ in\ there\ or\ not\r\n
comment7.params=
comment7.target=java.lang.Object\ removeFirst()
comment7.text=\r\n\ remove\ the\ first\ element\ of\ the\ LL\r\n\ @return\ the\ first\ element\ of\ the\ LL\r\n
comment8.params=
comment8.target=ListIterator\ listIterator()
numComments=9
